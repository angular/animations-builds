{"version":3,"file":"browser-testing.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/packages/animations/browser/testing/src/mock_animation_driver.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\nimport {\n  AnimationPlayer,\n  AUTO_STYLE,\n  NoopAnimationPlayer,\n  ɵStyleDataMap,\n} from '../../../src/animations';\nimport {\n  AnimationDriver,\n  ɵallowPreviousPlayerStylesMerge as allowPreviousPlayerStylesMerge,\n  ɵcamelCaseToDashCase,\n  ɵcontainsElement as containsElement,\n  ɵgetParentElement as getParentElement,\n  ɵinvokeQuery as invokeQuery,\n  ɵnormalizeKeyframes as normalizeKeyframes,\n  ɵvalidateStyleProperty as validateStyleProperty,\n  ɵvalidateWebAnimatableStyleProperty,\n} from '../../../browser';\n\n/**\n * @publicApi\n *\n * @deprecated 20.2 Use `animate.enter` or `animate.leave` instead. Intent to remove in v23\n */\nexport class MockAnimationDriver implements AnimationDriver {\n  static log: AnimationPlayer[] = [];\n\n  validateStyleProperty(prop: string): boolean {\n    return validateStyleProperty(prop);\n  }\n\n  validateAnimatableStyleProperty(prop: string): boolean {\n    const cssProp = ɵcamelCaseToDashCase(prop);\n    return ɵvalidateWebAnimatableStyleProperty(cssProp);\n  }\n\n  containsElement(elm1: any, elm2: any): boolean {\n    return containsElement(elm1, elm2);\n  }\n\n  getParentElement(element: unknown): unknown {\n    return getParentElement(element);\n  }\n\n  query(element: any, selector: string, multi: boolean): any[] {\n    return invokeQuery(element, selector, multi);\n  }\n\n  computeStyle(element: any, prop: string, defaultValue?: string): string {\n    return defaultValue || '';\n  }\n\n  animate(\n    element: any,\n    keyframes: Array<ɵStyleDataMap>,\n    duration: number,\n    delay: number,\n    easing: string,\n    previousPlayers: any[] = [],\n  ): MockAnimationPlayer {\n    const player = new MockAnimationPlayer(\n      element,\n      keyframes,\n      duration,\n      delay,\n      easing,\n      previousPlayers,\n    );\n    MockAnimationDriver.log.push(<AnimationPlayer>player);\n    return player;\n  }\n}\n\n/**\n * @publicApi\n *\n * @deprecated 20.2 Use `animate.enter` or `animate.leave` instead. Intent to remove in v23\n */\nexport class MockAnimationPlayer extends NoopAnimationPlayer {\n  private __finished = false;\n  private __started = false;\n  public previousStyles: ɵStyleDataMap = new Map();\n  private _onInitFns: (() => any)[] = [];\n  public currentSnapshot: ɵStyleDataMap = new Map();\n  private _keyframes: Array<ɵStyleDataMap> = [];\n\n  constructor(\n    public element: any,\n    public keyframes: Array<ɵStyleDataMap>,\n    public duration: number,\n    public delay: number,\n    public easing: string,\n    public previousPlayers: any[],\n  ) {\n    super(duration, delay);\n\n    this._keyframes = normalizeKeyframes(keyframes);\n\n    if (allowPreviousPlayerStylesMerge(duration, delay)) {\n      previousPlayers.forEach((player) => {\n        if (player instanceof MockAnimationPlayer) {\n          const styles = player.currentSnapshot;\n          styles.forEach((val, prop) => this.previousStyles.set(prop, val));\n        }\n      });\n    }\n  }\n\n  /** @internal */\n  onInit(fn: () => any) {\n    this._onInitFns.push(fn);\n  }\n\n  /** @internal */\n  override init() {\n    super.init();\n    this._onInitFns.forEach((fn) => fn());\n    this._onInitFns = [];\n  }\n\n  override reset() {\n    super.reset();\n    this.__started = false;\n  }\n\n  override finish(): void {\n    super.finish();\n    this.__finished = true;\n  }\n\n  override destroy(): void {\n    super.destroy();\n    this.__finished = true;\n  }\n\n  /** @internal */\n  triggerMicrotask() {}\n\n  override play(): void {\n    super.play();\n    this.__started = true;\n  }\n\n  override hasStarted() {\n    return this.__started;\n  }\n\n  beforeDestroy() {\n    const captures: ɵStyleDataMap = new Map();\n\n    this.previousStyles.forEach((val, prop) => captures.set(prop, val));\n\n    if (this.hasStarted()) {\n      // when assembling the captured styles, it's important that\n      // we build the keyframe styles in the following order:\n      // {other styles within keyframes, ... previousStyles }\n      this._keyframes.forEach((kf) => {\n        for (let [prop, val] of kf) {\n          if (prop !== 'offset') {\n            captures.set(prop, this.__finished ? val : AUTO_STYLE);\n          }\n        }\n      });\n    }\n\n    this.currentSnapshot = captures;\n  }\n}\n"],"names":["MockAnimationDriver","validateStyleProperty","prop","cssProp","ɵcamelCaseToDashCase","ɵvalidateWebAnimatableStyleProperty","containsElement","elm1","elm2","getParentElement","element","query","selector","multi","invokeQuery","computeStyle","defaultValue","animate","keyframes","duration","delay","easing","previousPlayers","player","MockAnimationPlayer","log","push","__started","previousStyles","Map","_onInitFns","currentSnapshot","_keyframes","constructor","normalizeKeyframes","allowPreviousPlayerStylesMerge","forEach","styles","val","set","fn","init"],"mappings":";;;;;;;;;;MAiCEA,mBACE,CAAA;AAIA,EAAA;AAgBFC,EAAAA,qBAAAA,CAAAC,IAAA,EAAA;;;;AAYE,IAAA,MAAAC,OAAA,GAAAC,mBAAA,CAAAF,IAAA,CAAA;IAQA,OAAAG,kCAAwB,CAAAF,OAAA,CAAA;AACxB;;AAIJ,IAAA,OAAAG,eAAA,CAAAC,IAAA,EAAAC,IAAA,CAAA;;;IAIG,OAAAC,gBAAA,CAAAC,OAAA,CAAA;;AAUQC,EAAAA,KAAAA,CAAAD,OAAA,EAAAE,QAAA,EAAAC,KAAA,EAAA;AAEA,IAAA,OAAAC,WAAA,CAAAJ,OAAA,EAAAE,QAAA,EAAAC,KAAA,CAAA;;AAEAE,EAAAA,YAAAA,CAAAL,OAAA,EAAAR,IAAA,EAAAc,YAAA,EAAA;2BAZiB,EAAA;;EAEnBC,OAAAA,CAAAP,OAAA,EAAAQ,SAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,eAAA,GAAA,EAAA,EAAA;AAEA,IAAA,MAAAC,MAAiC,GAAA,IAASC,mBAAA,CAAAd,OAAA,EAAAQ,SAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,eAAA,CAAA;AACzCtB,IAAAA,mBAAqC,CAAAyB,GAAA,CAAAC,IAAA,CAAAH,MAAA,CAAA;;;;;;;;;;;YAyC9B,GAAA,KAAA;EAWfI,SAAA,GAAA,KAAA;AAEaC,EAAAA,cAAA,OAAAC,GAAA,EAAA;EACNC,UAAA,GAAA,EAAA;AACLC,EAAAA,eAAA,OAAAF,GAAA,EAAA;EACFG,UAAA,GAAA,EAAA;EAEmBC,WAAAvB,CAAAA,OAAA,EAAAQ,SAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,eAAA,EAAA;IAjBZ,KAAOH,CAAAA,QAAE,EAAAC,KAAA,CAAA;IACd,IAAKV,CAAAA,OAAA,GAAaA,OAAA;IACpB,IAAAQ,CAAAA,SAAA,GAAAA,SAAA;IAEgB,IAAAC,CAAAA,QAAA,GAAAA,QAAA;IACT,IAAAC,CAAAA,KAAA,GAAUA,KAAA;IACf,IAAAC,CAAAA,MAAsB,GAAAA,MAAA;wBAMX,GAAAC,eAEX;AAKF,IAAA,IAAA,CAAAU,UAAA,GAAAE,kBAAA,CAAAhB,SAAA,CAAA;AATA,IAAA,IAAAiB;MAEab,eAAA,CAAAc,OAAA,CAAAb,MAAA,IAAA;QACN,IAAAA,MAAA,YAAOC,mBAAA,EAAA;AACP,UAAA,MAAAa,MAAY,GAAAd,MAAA,CAAAQ,eAAA;AACnBM,UAAAA,MAAA,CAAAD,OAAA,CAAAE,CAAAA,GAAA,EAAApC,IAAA,KAAA0B,IAAAA,CAAAA,cAAA,CAAAW,GAAA,CAAArC,IAAA,EAAAoC,GAAA,CAAA,CAAA;AAEmB;OAKjB,CAAA;AAIA;;;wBAIO,CAAAE,EAAA,CAAA;;AAGCC,EAAAA,IAAAA,GAAA;;AAGN,IAAA,IAAA,CAAAX,UAAE,CAAAM,OAAA,CAAAI,EAAA,IAAAA,EAAA,EAAA,CAAA;QACJ,CAAAV,UAAA,GAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}